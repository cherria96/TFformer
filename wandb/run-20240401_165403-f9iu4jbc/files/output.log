GPU available: False, used: False
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/user126/anaconda3/envs/dt_idl/lib/python3.11/site-packages/torch/nn/init.py:412: UserWarning: Initializing zero-element tensors is a no-op
  warnings.warn("Initializing zero-element tensors is a no-op")
/home/user126/anaconda3/envs/dt_idl/lib/python3.11/site-packages/pytorch_lightning/trainer/configuration_validator.py:108: PossibleUserWarning: You defined a `validation_step` but have no `val_dataloader`. Skipping val loop.
  rank_zero_warn(
  | Name                       | Type                       | Params
--------------------------------------------------------------------------
0 | A_input_transformation     | Linear                     | 80
1 | X_input_transformation     | Linear                     | 16
2 | Y_input_transformation     | Linear                     | 32
3 | V_input_transformation     | Linear                     | 32
4 | self_positional_encoding_k | RelativePositionalEncoding | 248
5 | self_positional_encoding_v | RelativePositionalEncoding | 248
6 | transformer_blocks         | ModuleList                 | 8.2 K
7 | output_dropout             | Dropout                    | 0
--------------------------------------------------------------------------
8.4 K     Trainable params
0         Non-trainable params
8.4 K     Total params
0.033     Total estimated model params size (MB)
/home/user126/anaconda3/envs/dt_idl/lib/python3.11/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:224: PossibleUserWarning: The dataloader, train_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 32 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/user126/anaconda3/envs/dt_idl/lib/python3.11/site-packages/torch/nn/_reduction.py:42: UserWarning: size_average and reduce args will be deprecated, please use reduction='none' instead.
  warnings.warn(warning.format(ret))










































Epoch 9:  35%|██████████████████████████████████▎                                                               | 14/40 [00:07<00:14,  1.85it/s, loss=0.425, v_num=4jbc]
/home/user126/anaconda3/envs/dt_idl/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py:48: UserWarning: Detected KeyboardInterrupt, attempting graceful shutdown...
  rank_zero_warn("Detected KeyboardInterrupt, attempting graceful shutdown...")
/home/user126/anaconda3/envs/dt_idl/lib/python3.11/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:224: PossibleUserWarning: The dataloader, test_dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 32 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/user126/TFformer/model/CT_ourmodel.py:341: UserWarning: Using a target size (torch.Size([256, 59, 1])) that is different to the input size (torch.Size([256, 59, 16])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  mse_loss = nn.functional.mse_loss(outcome_pred, batch['outputs'], reduce=False)
/home/user126/TFformer/model/CT_ourmodel.py:341: UserWarning: Using a target size (torch.Size([232, 59, 1])) that is different to the input size (torch.Size([232, 59, 16])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  mse_loss = nn.functional.mse_loss(outcome_pred, batch['outputs'], reduce=False)
INFO:model.CT_ourmodel:RMSE calculation for val.
INFO:model.CT_ourmodel:Predictions for val.
/home/user126/anaconda3/envs/dt_idl/lib/python3.11/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:224: PossibleUserWarning: The dataloader, predict_dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 32 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
INFO:__main__:Val normalised RMSE (all): 26.246608205285277; Val normalised RMSE (orig): 26.1880005134261
INFO:model.CT_ourmodel:RMSE calculation for test.
Testing DataLoader 0: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00, 13.01it/s]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Runningstage.testing metric      DataLoader 0
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
      test_mse_loss         1.8752301067024566
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Predicting DataLoader 0: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00, 13.20it/s]
Predicting DataLoader 0:  11%|███████████▉                                                                                              | 10/89 [00:00<00:05, 13.52it/s]
Traceback (most recent call last):
  File "/home/user126/TFformer/main.py", line 174, in <module>
    test_rmse_orig, test_rmse_all, test_rmse_last = model.get_normalised_masked_rmse(datasetcollection.test_cf_one_step,
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/user126/TFformer/model/CT_ourmodel.py", line 261, in get_normalised_masked_rmse
    outputs_scaled = self.get_predictions(dataset)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/user126/TFformer/model/CT_ourmodel.py", line 167, in get_predictions
    outcome_pred, _ = [torch.cat(arrs) for arrs in zip(*self.trainer.predict(self, data_loader))]
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Predicting DataLoader 0:  35%|████████████████████████████████████▉                                                                     | 31/89 [00:02<00:04, 13.42it/s]